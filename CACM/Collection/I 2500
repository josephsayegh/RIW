deadlocks managing resources avoiding practical approach resource allocation expensive scheduling time multiprogramming space regard time involving large numbers environments sharing resources requirements conflicting tasks deadlocks require detection prevention efficient amounts overhead massive additional resource resources usage maintained management linked program overcome large lists techniques overhead portion program running large part scale purpose general resources system keeps operating deadlocks prevent active detect state implemented permit deadlock comprehensive levels additional cost detection prevention running system due incorporated deadlock situations infrequency resource deadlock allocation scheduling time multiprogramming management sharing multiprocessing deadly embrace 
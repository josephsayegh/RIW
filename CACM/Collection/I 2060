simple gedanken typeless based language principle completeness reference concept experimental language gedanken programming permitted context 1 characteristics permissible context meaningful language values results permissible functions labels 2 addressing formalized indirect variables assignment reference values introducing possess turn called values operation affects assignment relation compound reference 3 data type functions structures declarations treated 4 functional approach structures data permitted accepts process insure references data structure accept equivalent regardless logically structure representation generally data internal giving arbitrary implicit algorithm components computing accessing existence coroutines label construction variables permits unorthodox control parallel processes quasi mechanisms variety programming generality examples illustrates language briefly extensions discussed limitations structure reference coroutine programming data assignment language applicative process typeless parallel quasi language algorithm lambda processing list calculus nondeterministic 
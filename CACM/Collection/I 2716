algebra performance interface optimizing database relational interface smart implementing approach data proposed support view relational techniques automatic idea employ basic programming interface efficiently analyzes level high specification supplied query refines algebra interface called user relational designed squiral approach seeks detail minimize squiral query 1 space response utilization time performing disjoint optimization global exploiting 2 query sort 3 concurrency pipelined orders coordinating relations employing directory temporary 4 page maintaining references analysis 5 locality operators implementing algorithms algebra codd relational presented optimize composing methodology performance user query database inverted relational optimization programming query language automatic manipulation level high data language 
database optimizing performance algebra relational interface interface implementing approach smart data proposed support relational view idea employ techniques basic programming automatic analyzes efficiently interface supplied high query level specification refines called user algebra relational interface squiral designed approach detail query squiral minimize seeks space time utilization response 1 performing global optimization disjoint 2 query exploiting concurrency 3 sort coordinating orders pipelined 4 directory relations employing temporary maintaining page references 5 analysis locality operators algorithms implementing codd relational presented algebra methodology optimize composing user performance query optimization database inverted relational programming automatic language query data high level manipulation language 
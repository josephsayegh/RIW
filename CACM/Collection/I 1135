based business oriented decision expressions language general programming digital compute structure covers wide class language business applications processing presented incorporating identifying based structure aspects common processes compiler compact writing permits class extremely comparatively applications complex programs control expressions tables terms express information characteristic local application process output affecting local effected involved modifications entry modification program inexpensive tables structure compilers preparation translate speed loading source efficient programs machine codes adopted conventional departs mechanical approach philosophies stresses language design analysis represented structural class processes languages emphasizing opposed syntactical contents definitions formal independent relies exclusively nonprocedural tables relations process sets representation data control results statements procedure descriptions translations flowcharts invariant procedure pattern identified class characteristic batch philosophy processes known potential overcome deficiencies languages oriented fully meets business languages set requirements codasyl machine including independence 
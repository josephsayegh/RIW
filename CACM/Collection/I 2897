code case compilers technique generation study recent techniques optimizing developments compilers design emerge allowed code source compiler parsed translates level code steps sequence lower expands level blocks higher statements step level code optimizations lower performs result statement code tailoring expansion task take advantage special optimizations cases evidence paper result code good object strategy concatenate difficult traditionally pl statement detailed investigated set fairly simple optimizations identified allow produce code elaborate good optimizations compiler improve object code concatenate code contexts statement optimization compiler expansion produced favorably strategy compares code conventional optimizing produced pl compiler structure code compiler optimizing compiler program concatenation generation pl optimization data flow techniques analysis 
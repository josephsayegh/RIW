verification parallel programs formal models parallel computation formal abstract model conceptual presented parallel model program distinguish data control states includes capability model representation set control states allowing infinite pointers instruction arbitrarily executing processes induction program principle control presented treats ground data state sets variables observed place correctness conditions expressed set control enumeration states induction presented examples exclusion proofs mutual demonstrate principle proof oriented shown assertions cases methods special induction principle method special case assertions called assertions shown place parallel deadlock formalization incomplete norm concept presented introduced problem yields deadlock extension technique proving floyd termination discussed extension model program variables local process global correctness variables permits shared discussed forms implementation relates appendix included work satisfiability logical work formulas previous correctness parallel program verification exclusion mutual assertions deadlock petrinet 
programs parallel formal verification computation parallel formal models model abstract conceptual presented model parallel program states distinguish control data model representation includes capability set states control allowing infinite arbitrarily pointers instruction induction program processes executing treats principle control presented ground state sets data place observed variables correctness expressed conditions states enumeration set control induction examples presented proofs demonstrate mutual principle exclusion shown oriented proof assertions special cases induction methods principle special method case assertions shown assertions parallel called place formalization deadlock incomplete norm concept introduced presented extension problem deadlock yields proving technique termination discussed floyd program model extension process local variables permits global correctness variables shared forms implementation discussed included appendix relates work satisfiability logical formulas work previous correctness parallel program verification deadlock assertions petrinet mutual exclusion 
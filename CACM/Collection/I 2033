errors coding space trade allowable time offs hash factors trade offs computational paper set examined coding methods hash messages method compared conventional coding hash area factors computational size considered hash required identify space time nonmember message set allowable reject time error methods frequency reduce required intended coded space amount hash information methods reduction conventional accomplished exploiting space fraction possibility small errors applications commission tolerable involved data amount applications large core resident feasible area conventional methods hash applications performance envisaged area smaller improved resident core hash conjunction methods test secondary time catch small consuming errors methods fraction discussed illustrates areas application demonstrates analysis paradigm methods allowing problem test identified falsely number small messages set smaller permit members hash increasing reject area time scatter searching coding addressing hash storage layout trade efficiency retrieval offs storage 
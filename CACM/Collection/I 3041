technique median fast split lookup keys frequently occuring trees technique sets searching split trees skewed distributions highly frequency keys node search tree split binary node key values maximally key frequent split subtree keys partitions remaining ordering respect lexical left mst median tree split subtrees descendents median lexical node split perfectly force search tree representation efficient achieving balanced space high search unlike tree speed ordered frequency cost search trees binary bounded mst log search successful stable mst values minimal built key set ordering opposed n2 time log frequencies optimum discussion search tree binary mst dictionary application english lookup obtained presented contrasted performance techniques dictionary heaps search tree lookup binary law information trees zipf balanced retrieval 
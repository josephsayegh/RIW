fast occuring technique frequently trees keys split lookup median searching technique trees split sets highly skewed distributions keys frequency node binary split tree search node values key key subtree maximally split frequent remaining partitions keys ordering respect lexical left mst split tree subtrees median node descendents split lexical median search perfectly tree force space achieving efficient balanced representation high unlike speed tree search binary trees frequency cost search ordered log mst bounded successful search minimal values stable mst set key built ordering log time frequencies opposed n2 optimum binary discussion tree search dictionary mst english application lookup obtained contrasted performance presented techniques heaps dictionary binary lookup tree search law balanced retrieval trees information zipf 
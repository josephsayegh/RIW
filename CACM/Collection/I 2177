blocks algorithm graph cutnodes presented efficient method finding blocks undirected arbitrary cutnodes represented graph edges ordered adjacency ii list packed word length matrix machine denotes storage required employed words machine edges nodes graph increases essentially 2 win case labeled spanning edges grown ii tree bearing finally labels edges blocks representations belong time analyze required graph depends type nodes increases 2 1 attained graph bounds derived suitable values graphs test generated extension families algorithm grammar web compared approach proposed detail read 1 3 algorithm cutpoint cutnode tree block fundamental cycle set graph lobe decomposition spanning grammar web graph tree separable 
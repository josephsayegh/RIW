serial processing time real list computer system processing time real list time list elementary required cdr operations replacd eq rplaca cons car atom bounded small lisp constant processing classical implementations list systems lack allocating property list cell process collection heap garbage heap time proportional size requires system processing time presented real list finish reclaims continuously including garbage directed cycles compacting linearizing contiguous cells avoid locations accessible pool free program small storage fragmenting time making interrupts requires sharing system suitable finally microcode requires time average classical space implementation reduced space requirements approximately compact classical list proportions representation arrays program stack sizes simple system extensions hash linking counting found reference inferior applications processing garbage time compacting real list collection virtual database memory management counting cdr allocation reference management storage lisp coding 
processing computer time serial real list system processing time real list required time list elementary rplaca cons car eq cdr replacd operations atom lisp bounded constant small implementations systems processing classical list cell property allocating lack list process heap collection garbage heap requires time size proportional system processing presented time real finish list reclaims including continuously garbage cycles linearizing directed compacting contiguous cells avoid locations accessible free program pool fragmenting small storage interrupts sharing making requires time system suitable requires finally microcode time average implementation classical space requirements space approximately reduced representation compact classical proportions list program stack sizes arrays system linking simple extensions hash found inferior counting reference applications processing compacting collection time garbage real list memory management virtual database allocation coding cdr management counting lisp reference storage 
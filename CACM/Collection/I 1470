structure languages programming components major identified 1 language elementary programming 2 linking statement elementary mechanisms program statements 3 means alternative obtain data inputs program forms components evaluated frequently compared examples illustrate processing list forms languages statements take elementary program requirements commands form implicit imperative command statement specifications action commands requirement describes achieved saying effect implicit actions similar programmer specification requirement understand actions entered subroutines achieve desired effect call function execute explicitly explicitly generally subroutines composition called require linkage special conventions execute call subroutine indistinguishable syntactically language basic instruction programming composition function convenient alternative call ways principal explicit getting 1 referring routines inputs 2 referring data means implicitly 3 referring variables functions names points structures data permanent entry causing distractions error contexts author discusses disadvantages factors advantages form component influencing choice language evolution suggesting concludes languages programming ways convenient permit structuring organizing referencing systems programs data 
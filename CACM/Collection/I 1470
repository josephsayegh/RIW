structure programming languages components major identified 1 programming language elementary 2 elementary linking program mechanisms statement statements means 3 obtain inputs data alternative program forms components examples frequently compared evaluated forms languages processing illustrate list statements program take elementary form requirements implicit commands specifications imperative statement command requirement action commands saying achieved describes effect actions implicit requirement programmer similar specification actions understand subroutines desired effect achieve entered execute function explicitly call subroutines explicitly composition called generally special conventions require linkage execute syntactically indistinguishable call subroutine instruction basic programming language composition convenient function alternative principal explicit ways call referring inputs 1 routines getting referring 2 data referring means implicitly 3 functions names variables entry points data structures permanent distractions error causing contexts factors discusses disadvantages author advantages form component influencing choice evolution suggesting concludes language programming languages convenient ways permit structuring programs referencing organizing systems data 
logic languages programming logic answers terested long principle questions computable possibilities outcome puts bounds precise formalization recently comparisons efficiency decision methods developments theory complexity logic applications question big logic significance methods direction applied parts languages theory computability programming offer obvious syntactic formalization opportunity advanced semantical theory complete give wide ranging examples mathematical answers machine queries process computable simulate programs process machine naturally giving descriptions processes enter precise definition meaning program objects requires explain problem statics computation transformed dynamics nets automata theories formalized dynamics teresting portion field concentration finite state algebraic aspects level higher understanding infinite involves features program forces objects pass levels conceptual ideas explanation levels final real simulation machine find exact made mathematically structures abstractions represent experience independent workers method data partial types lattices content information orderings ordering continuous demonstrated mappings approach definitions providing flexibility dependence clean proofs undue implementations remains conceptualizations abstract showing actualized say unified theory logic languages denotational automata programming calculus models semantics computability function partial functions spaces approximation 
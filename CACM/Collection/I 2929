programming structured inline substitution analysis language optimization technique inline known substitution optimization analyzed consists copy procedure modified replacing invocation body general problem procedure minimize execution inline time substitution constrain subject formulated ts size algorithm approximate algorithmic proposed solution statistics depends run time preliminary optimized results program structured language clu programming programs 90 degree recursion low eliminated calls percent procedure code size increase compiled savings execution small conclusions time presented results based inline compilation open coding substitution optimization structured program compilers statistics programming time languages run 
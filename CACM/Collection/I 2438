multiple model stack implementation environments structures environment control access require storage procedure activation exist control times nested activated straightforward procedure implement dynamic allocation storage linked blocks expensive activation presents space time implementation paper hold stack technique single storage procedure activation retention storage necessarily durations tied property flow control technique simple identically runs case deallocation stack usual allocation procedure automatic applications multitasking technique valued coroutines variables label backtracking discussed arguments initial functional processor model real implementation assumed single assumes multiple processes coordinate explicitly control passing multiprocessor implementation requires basic technique control stack structures allocation environments dynamic dendrarchy allocation retention storage problem funarg multitasking environments access valued coroutines variables label backtracking control multiprocessor functional structures extensible systems arguments 
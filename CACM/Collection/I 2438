implementation stack model environments multiple structures access environment control activation storage require procedure times exist nested control activated straightforward procedure implement allocation dynamic storage linked blocks activation expensive presents implementation paper time space technique single stack hold activation storage retention procedure tied durations storage necessarily property technique flow control case simple identically runs allocation usual procedure automatic stack deallocation multitasking technique applications coroutines valued label backtracking variables arguments discussed functional initial implementation real model single processor assumed assumes coordinate multiple processes control passing multiprocessor explicitly requires implementation basic technique allocation control structures environments stack allocation retention dynamic storage dendrarchy multitasking access problem environments funarg coroutines valued label backtracking variables functional systems arguments multiprocessor control structures extensible 
lexical efficient generation automatic state techniques finite processors practical theory application state generate automata finite tutorial article processors lexical dealt rword system aed developed part 1 system aed input multicharacter accepts description words allowable terms items language output expressions subset regular reads lexical system string processor items characters combines output expressions regular defined code item identified number block storage characters pointer character item count processors state machines produced system based finite state corresponds machine processing character condition lexical unique state string character read state transition machine actions based character system read operation generated 1966 processors hand programs carefully speed favorably compared coded lexical accomplish task processors aed mad employed independent produced techniques evaluated nature items word character substituted string events decision generalized making processors sequence ordered mechanisms based system events area lexical range applications convenient advantages processing important consideration speed designing system generation automatic goal lexical processor nearly eliminated backup completely rereading hand fast coded processors language analyze errors detect convenient easy state character automata compiler string finite lexical processor nondeterministic machine structure plex sequential parsing regular machine expressions syntactic analysis machine 
generation efficient lexical automatic processors finite state techniques practical application theory automata finite state generate article dealt tutorial processors lexical rword aed developed system 1 aed part system input description multicharacter accepts terms words allowable items language expressions regular subset output string system processor reads lexical characters items combines expressions defined regular output item identified code number characters block pointer storage character item count processors system machines produced finite state based corresponds state machine processing condition character unique lexical character state string read state transition machine actions based character operation read system generated 1966 processors coded compared speed carefully favorably hand programs processors lexical task accomplish mad aed techniques independent employed produced items nature evaluated string events substituted word character decision processors making generalized mechanisms sequence based ordered events system applications range area lexical convenient advantages processing important speed consideration designing generation automatic system processor goal lexical completely nearly rereading eliminated backup processors hand fast coded errors detect language analyze convenient easy string automata compiler finite state character processor lexical nondeterministic machine structure regular sequential expressions parsing machine plex syntactic machine analysis 
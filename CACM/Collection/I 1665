generation automatic efficient lexical finite state processors techniques application practical theory finite generate state automata dealt article tutorial lexical processors rword system aed developed 1 system part aed multicharacter input accepts description allowable terms items language words regular output subset expressions reads system processor string lexical combines items characters regular output defined expressions code identified item number pointer storage block characters character count item processors machines system state based produced finite machine corresponds state character processing condition unique lexical read character state string transition machine state actions based read character system operation 1966 processors generated coded compared programs hand speed carefully favorably task lexical processors accomplish aed mad independent produced employed techniques nature evaluated items character events word string substituted generalized making processors decision mechanisms based sequence ordered system events applications area lexical range processing convenient advantages important speed consideration generation designing system automatic processor lexical goal eliminated nearly rereading completely backup fast hand coded processors errors language detect analyze convenient easy character state automata compiler finite string machine processor nondeterministic lexical parsing regular structure sequential expressions plex machine analysis machine syntactic 